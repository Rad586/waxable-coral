plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_id}-Fabric-${mc_version}-${mod_version}"

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    implementation project(":Common")
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    "$rootDir/Common/src/main/generated/resources"
            ]
        }
    }
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        testData {
            server()
            setConfigName("Fabric TestData")
            ideConfigGenerated(true)

            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"

            runDir "build/datagen"
        }
    }

    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand inputs.properties
    }
}

idea {
    module {
        inheritOutputDirs = false
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
