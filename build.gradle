plugins {
    id 'com.matyrobbrt.mc.registrationutils' version "${reg_utils}"
}

registrationUtils {
    group 'dhyces.waxablecoral.registration'
    projects {
        // A project is declared like so: name { configuration }
        Fabric { type 'fabric'; project ":Fabric" } // The fabric project
        Forge { type 'forge'; project ":Forge" } // The forge project
        Common { type 'common'; project ":Common" } // The common project
    }
}

subprojects {
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_id}" }
        }
        manifest {
            attributes([
                    'Specification-Title'     : mod_id,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : mod_version,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : mod_version,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestamp'              : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : mc_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_id}" }
        }
    }

    dependencies {
        implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/dhyces/trimmed")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
        maven { url = "https://jitpack.io/" }
        maven {
            url = "https://jm.gserv.me/repository/maven-public/"
        }
    }

    tasks.withType(JavaCompile).configureEach {

        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }
}